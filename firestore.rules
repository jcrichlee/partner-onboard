
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin roles
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can manage any user document
      // Users can read/update their own document
      allow read, update: if isAdmin() || request.auth.uid == userId;
      // Any authenticated user can create their user document
      allow create: if request.auth.uid != null;
      // Admins can delete users
      allow delete: if isAdmin();
    }
    
    // Rules for the 'onboardingSubmissions' collection
    match /onboardingSubmissions/{submissionId} {
      // Admins can read any submission
      // Partners can read their own submission
      allow read: if isAdmin() || get(/databases/$(database)/documents/onboardingSubmissions/$(submissionId)).data.partnerId == request.auth.uid;
      
      // Admins can update any submission
      // Partners can update their own submission
      allow update: if isAdmin() || get(/databases/$(database)/documents/onboardingSubmissions/$(submissionId)).data.partnerId == request.auth.uid;
      
      // Only authenticated users (partners) can create submissions
      allow create: if request.auth.uid != null && request.resource.data.partnerId == request.auth.uid;
      
      // No one can delete submissions through the client for data integrity
      allow delete: if false;
    }
  }
}
