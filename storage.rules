
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user has admin role in custom claims
    function isAdmin() {
      return request.auth != null && 
             request.auth.token != null &&
             ('role' in request.auth.token) &&
             request.auth.token.role in ['admin', 'superadmin'];
    }

    // Allow authenticated users to read/write to their own submission directories
    match /users/{userId}/submissions/{submissionId}/{category}/{fieldName}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow admins to read all user submissions for review purposes
      allow read: if isAdmin();
    }

    // Allow admins to upload general documents (e.g., templates, guidelines)
    match /admin/{allPaths=**} {
      allow read, write: if isAdmin();
    }

    // Allow public read access to public assets
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Fallback: authenticated users can read/write to legacy paths for backward compatibility
    match /{allPaths=**} {
      allow read, write: if request.auth != null;
    }
  }
}
